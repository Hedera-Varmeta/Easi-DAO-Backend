import { DataSourceOptions } from "typeorm";
import {
  Address,
  Admin,
  Config,
  CurrencyConfig,
  CurrencyToken,
  KmsCmk,
  KmsDataKey,
  User,
  Comment,
  DAO,
  DAOAsset,
  DAOMember,
  DAORole,
  Event,
  Governors,
  LatestBlock,
  Notification,
  Proposal,
  ProposalComment,
  ProposalHistory,
  Reward,
  Setting,
  TokenBalances,
  TokenTransfer,
  Transaction,
  Vote,
  VoteHistory,
  VoteOption,
  GovernorsType,
  GovernorsSetting,
  GovernorsSettingField,
  GovernorsSettingValue,
  GovernorsVoteField,
  GovernorsVoteValue,
  DAODelegate,
  DAOSocial,
  DAOProfile,
  TreasuryTransaction,
  TypeTreasury,
  DAOTreasury,
} from "../database/entities";

require("dotenv").config();

export const databaseConfig: DataSourceOptions = {
  type: (process.env.TYPEORM_CONNECTION || "mysql") as any,
  host: process.env.TYPEORM_HOST || "localhost",
  port: parseInt(process.env.TYPEORM_PORT) || 3306,
  username: process.env.TYPEORM_USERNAME || "username",
  password: process.env.TYPEORM_PASSWORD || "password",
  database: process.env.TYPEORM_DATABASE || "database",
  entities: [
    Admin,
    Address,
    CurrencyConfig,
    KmsCmk,
    KmsDataKey,
    Config,
    CurrencyToken,
    User,
    Comment,
    DAO,
    DAOAsset,
    DAOMember,
    DAORole,
    Event,
    Governors,
    LatestBlock,
    Notification,
    Proposal,
    ProposalComment,
    ProposalHistory,
    Reward,
    Setting,
    TokenBalances,
    TokenTransfer,
    Transaction,
    Vote,
    VoteHistory,
    VoteOption,
    GovernorsType,
    GovernorsSetting,
    GovernorsSettingField,
    GovernorsSettingValue,
    GovernorsVoteField,
    GovernorsVoteValue,
    DAODelegate,
    DAOSocial,
    DAOProfile,
    TreasuryTransaction,
    TypeTreasury,
    DAOTreasury,
  ],
  synchronize: true,
};
